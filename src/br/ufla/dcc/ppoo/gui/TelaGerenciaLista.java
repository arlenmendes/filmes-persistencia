/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufla.dcc.ppoo.gui;

import br.ufla.dcc.ppoo.modelo.Filme;
import br.ufla.dcc.ppoo.modelo.Lista;
import br.ufla.dcc.ppoo.modelo.Palavra;
import br.ufla.dcc.ppoo.servicos.GerenciadorFilmes;
import br.ufla.dcc.ppoo.servicos.GerenciadorListasDeFilmes;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author arlen
 */
public class TelaGerenciaLista extends javax.swing.JDialog {
    
    private PalavrasTableModel modelChaves;
    private FilmesTableModel modelFilmes;
    private FilmesTableModel modelFilmesSelecionados;
    private Lista lista;
    private List<Filme> filmes;
    private GerenciadorListasDeFilmes gerenciadorListasDeFilmes;
    private GerenciadorFilmes gerenciadorFilmes;
    
    /**
     * Creates new form TelaGerenciaLista
     */
    public TelaGerenciaLista(java.awt.Frame parent, boolean modal, Lista l) throws SQLException {
        
        super(parent, modal);
        
        gerenciadorListasDeFilmes = new GerenciadorListasDeFilmes();
        gerenciadorFilmes = new GerenciadorFilmes();
        
        //lista que vai ser retornada para a TelaMihasListas
        lista = null;
        
        modelChaves = new PalavrasTableModel();
        
        if(l != null){
            
            for(Palavra palavra : l.getChaves()) {
                modelChaves.adicionarPalavra(palavra);
            }
            modelFilmesSelecionados = new FilmesTableModel(l.getFilmes());
            modelFilmes = new FilmesTableModel(verificaFilmes(l.getFilmes()));
        } else {
            modelFilmes = new FilmesTableModel(gerenciadorFilmes.buscarTodosFilmes());
            modelFilmesSelecionados = new FilmesTableModel();
        }
        
        initComponents();
        
        if(l == null){
            preparaComponentesNovaLista();
        } else {
            preparaComponentesEdiarLista(l);
        }
        
        filmes = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        lbNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        spListaPalavras = new javax.swing.JScrollPane();
        tbPalavrasChaves = new javax.swing.JTable();
        btnAdicinarPalavraChave = new javax.swing.JButton();
        txtPalavraChave = new javax.swing.JTextField();
        btnRemoverPalavraChave = new javax.swing.JButton();
        lbPalavraChave = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnFinalizar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        lbFilmes = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lbCodigo = new javax.swing.JLabel();
        txtAutor = new javax.swing.JTextField();
        lbAutor = new javax.swing.JLabel();
        spTodosFilmes = new javax.swing.JScrollPane();
        tbFilmes = new javax.swing.JTable();
        spTodosFilmes1 = new javax.swing.JScrollPane();
        tbFilmesSelecionados = new javax.swing.JTable();
        btnAdicionarFilme = new javax.swing.JButton();
        btnRemoverFilme = new javax.swing.JButton();
        lbFilmesDaLista = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gernciar Lista");

        lbNome.setText("Nome:");

        tbPalavrasChaves.setModel(modelChaves);
        spListaPalavras.setViewportView(tbPalavrasChaves);

        btnAdicinarPalavraChave.setText("Adicionar");
        btnAdicinarPalavraChave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicinarPalavraChaveActionPerformed(evt);
            }
        });

        btnRemoverPalavraChave.setText("Remover");
        btnRemoverPalavraChave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverPalavraChaveActionPerformed(evt);
            }
        });

        lbPalavraChave.setText("Palvras-chave");

        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lbFilmes.setText("Todos Meus Filmes");

        lbCodigo.setText("Codigo:");

        lbAutor.setText("Autor:");

        tbFilmes.setModel(modelFilmes);
        spTodosFilmes.setViewportView(tbFilmes);

        tbFilmesSelecionados.setModel(modelFilmesSelecionados);
        spTodosFilmes1.setViewportView(tbFilmesSelecionados);

        btnAdicionarFilme.setText("Adicionar");
        btnAdicionarFilme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarFilmeActionPerformed(evt);
            }
        });

        btnRemoverFilme.setText("Remover");
        btnRemoverFilme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverFilmeActionPerformed(evt);
            }
        });

        lbFilmesDaLista.setText("Filmes da Lista");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbPalavraChave)
                        .addGap(192, 192, 192))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spTodosFilmes1)
                            .addComponent(spTodosFilmes)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAdicinarPalavraChave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPalavraChave)
                                    .addComponent(btnRemoverPalavraChave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spListaPalavras, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbNome)
                                    .addComponent(lbCodigo)
                                    .addComponent(lbAutor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator1))
                                    .addComponent(txtNome)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdicionarFilme, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRemoverFilme, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(lbFilmes))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(lbFilmesDaLista)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCodigo))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbAutor))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPalavraChave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPalavraChave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(btnAdicinarPalavraChave, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverPalavraChave, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spListaPalavras, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbFilmes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTodosFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionarFilme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(lbFilmesDaLista)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTodosFilmes1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemoverFilme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnFinalizar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        finalizarLista();
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void btnAdicinarPalavraChaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicinarPalavraChaveActionPerformed
        adicionarPalavra();
    }//GEN-LAST:event_btnAdicinarPalavraChaveActionPerformed

    private void btnRemoverPalavraChaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverPalavraChaveActionPerformed
        if(tbPalavrasChaves.getSelectedRow() >= 0)
            removerPalavra();
    }//GEN-LAST:event_btnRemoverPalavraChaveActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAdicionarFilmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarFilmeActionPerformed
        if(tbFilmes.getSelectedRow() >= 0){
            int linha = tbFilmes.getSelectedRow();
            modelFilmesSelecionados.adicionarFilme(modelFilmes.buscarFilme(linha));
            modelFilmes.removerFilme(linha);
            tbFilmes.clearSelection();
        }
    }//GEN-LAST:event_btnAdicionarFilmeActionPerformed

    private void btnRemoverFilmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverFilmeActionPerformed
        if(tbFilmesSelecionados.getSelectedRow() >= 0){
            int linha = tbFilmesSelecionados.getSelectedRow();
            modelFilmes.adicionarFilme(modelFilmesSelecionados.buscarFilme(linha));
            modelFilmesSelecionados.removerFilme(linha);
            tbFilmesSelecionados.clearSelection();
        }
    }//GEN-LAST:event_btnRemoverFilmeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Lista l = null;
                TelaGerenciaLista dialog;
                try {
                    dialog = new TelaGerenciaLista(new javax.swing.JFrame(), true, l);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaGerenciaLista.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicinarPalavraChave;
    private javax.swing.JButton btnAdicionarFilme;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnRemoverFilme;
    private javax.swing.JButton btnRemoverPalavraChave;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbAutor;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbFilmes;
    private javax.swing.JLabel lbFilmesDaLista;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbPalavraChave;
    private javax.swing.JScrollPane spListaPalavras;
    private javax.swing.JScrollPane spTodosFilmes;
    private javax.swing.JScrollPane spTodosFilmes1;
    private javax.swing.JTable tbFilmes;
    private javax.swing.JTable tbFilmesSelecionados;
    private javax.swing.JTable tbPalavrasChaves;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPalavraChave;
    // End of variables declaration//GEN-END:variables

    private void  preparaComponentesNovaLista() {
        txtNome.setEditable(true);
        txtPalavraChave.setEditable(true);
        txtCodigo.setEditable(false);
        txtAutor.setEditable(false);
    }
    
    private void preparaComponentesEdiarLista(Lista l) {
        txtNome.setEditable(true);
        txtPalavraChave.setEditable(true);
        txtCodigo.setEditable(false);
        txtAutor.setEditable(false);
        
        txtNome.setText(l.getNome());
        txtAutor.setText(l.getAutor());
        txtCodigo.setText(Integer.toString(l.getId()));
    }
    
    private void finalizarLista(){
        List<Lista> listas = new ArrayList<>();
        try {
            listas = gerenciadorListasDeFilmes.buscarListasUsuarioLogado();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar nomes de listas cadastradas: \n" + ex.getMessage());
        }
        
        boolean existe = false;
        for(Lista l : listas) {
            if(l.getNome().equals(txtNome.getText())){
                existe = true;
            }
        }
        
        if(!existe || !(txtCodigo.getText().equals("")) && !txtNome.getText().equals("")){
            if(modelChaves.buscarPalavras().size() > 0){
                if(modelFilmesSelecionados.buscarFilmes().size() > 1) {
                    lista = new Lista(txtNome.getText(), modelChaves.buscarPalavras(), modelFilmesSelecionados.buscarFilmes());
                    if(!txtCodigo.getText().equals(""))
                        lista.setId(Integer.parseInt(txtCodigo.getText()));
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "A Lista deve Conter Pelo menos 2 filmes.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Palavra Chave nao iformada.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ja contem uma lista com este nome! Ou o nome nao foi informado.");
        }
    }
    
    private void adicionarPalavra(){
        if(!txtPalavraChave.getText().equals("")){
            modelChaves.adicionarPalavra(new Palavra(0, txtPalavraChave.getText()));
            txtPalavraChave.setText("");
        }
    }
    
    private void removerPalavra(){
        modelChaves.removerPalavra(tbPalavrasChaves.getSelectedRow());
    }
    
    private List<Filme> verificaFilmes(List<Filme> filmesInseridos) throws SQLException{
        List<Filme> resposta = new ArrayList<>();
        boolean igual;
        List<Filme> filmes = gerenciadorFilmes.buscarTodosFilmes();
        for(Filme f : filmes){
            igual = false;
            for(Filme j : filmesInseridos){
                if(j.getId() == f.getId())
                    igual = true;
            }
            if(!igual)
                resposta.add(f);
        }
        
        return resposta;
    }
    
    public Lista getLista() {
        return lista;
    }
}
