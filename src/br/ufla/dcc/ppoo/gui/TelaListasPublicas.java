/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufla.dcc.ppoo.gui;

import br.ufla.dcc.ppoo.modelo.Filme;
import br.ufla.dcc.ppoo.modelo.Lista;
import br.ufla.dcc.ppoo.seguranca.SessaoUsuario;
import br.ufla.dcc.ppoo.servicos.GerenciadorFilmes;
import br.ufla.dcc.ppoo.servicos.GerenciadorListasDeFilmes;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author arlen
 */
public class TelaListasPublicas extends javax.swing.JDialog {
    
    
    ListasTableModel modelListas;
    GerenciadorListasDeFilmes gerenciadorListasDeFilmes;
    GerenciadorFilmes gerenciadorFilmes;
    /**
     * Creates new form TelaMinhasListasFilmes
     */
    public TelaListasPublicas(java.awt.Frame parent, boolean modal, List<Lista> listas) throws SQLException {
        super(parent, modal);
        gerenciadorListasDeFilmes = new GerenciadorListasDeFilmes();
        gerenciadorFilmes = new GerenciadorFilmes();
        construirTabelas(listas);
        initComponents();
        preparaComponenteInicial();
    }
    
    private void construirTabelas(List<Lista> ls) throws SQLException {
        modelListas = new ListasTableModel(ls);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbListas = new javax.swing.JTable();
        btnImportar = new javax.swing.JButton();
        btnDetalhes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciar Listas");

        tbListas.setModel(modelListas);
        tbListas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbListas);

        btnImportar.setText("Importar");
        btnImportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarActionPerformed(evt);
            }
        });

        btnDetalhes.setText("Detalhes");
        btnDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImportar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetalhes, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImportar)
                    .addComponent(btnDetalhes))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbListasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListasMouseClicked
        if(SessaoUsuario.obterInstancia().estahLogado())
            preparaComponenteSelecionaLista();
        btnDetalhes.setEnabled(true);
    }//GEN-LAST:event_tbListasMouseClicked

    private void btnDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhesActionPerformed
        TelaDetalhesLista telaDL;
        try {
            telaDL = new TelaDetalhesLista(null, true, modelListas.buscarLista(tbListas.getSelectedRow()));
            telaDL.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TelaListasPublicas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnDetalhesActionPerformed

    private void btnImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarActionPerformed
        try {
            importarLista();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro: \n\n " + ex.getMessage());
        }
    }//GEN-LAST:event_btnImportarActionPerformed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaListasPublicas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaListasPublicas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaListasPublicas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaListasPublicas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaListasPublicas dialog;
                try {
                    dialog = new TelaListasPublicas(new javax.swing.JFrame(), true, null);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaListasPublicas.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalhes;
    private javax.swing.JButton btnImportar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbListas;
    // End of variables declaration//GEN-END:variables
        
    private void preparaComponenteInicial(){
        btnImportar.setEnabled(false);
        btnDetalhes.setEnabled(false);
    }
    
    private void preparaComponenteSelecionaLista(){
        btnImportar.setEnabled(true);
        btnDetalhes.setEnabled(true);
    }
    
    private void importarLista() throws SQLException {
        Lista lista = modelListas.buscarLista(tbListas.getSelectedRow());
        List<Lista> minhasListas = gerenciadorListasDeFilmes.buscarListasUsuarioLogado();
        
        boolean dono = false;
        
        for(Lista l : minhasListas){
            if(l.getId() == lista.getId()){
                dono = true;
            }
        }
        
        if(!dono){
            for(Lista l : minhasListas){
                String novoNome = "";
                while(lista.getNome().equals(l.getNome()) && novoNome != null) {
                    novoNome = JOptionPane.showInputDialog("Voce ja possui uma lista com o nome: " +lista.getNome() + ".\nPor favor informe um nome diferente.");
                    if(novoNome != null && !novoNome.equals("")){
                        lista.setNome(novoNome);
                        lista.setFilmes(gerenciadorFilmes.adicionarFilmesImportados(lista.getFilmes()));
                        gerenciadorListasDeFilmes.cadastrarLista(lista);
                        JOptionPane.showMessageDialog(null, "Lista " + lista.getNome() + "Importada.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "a lista " + lista.getNome() + " ja esta em suas listas");
        }
        
        
    }
    
    private boolean verificaNomeIgual(Lista lista, List<Lista> listas) {
        boolean resposta = false;
        for(Lista l : listas){
            if(l.getNome().equals(lista.getNome())){
                resposta = true;
            }
        }
        
        return resposta;
    }
}
